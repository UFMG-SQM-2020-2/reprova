# -*- org-confirm-babel-evaluate: nil -*-

* API
  #+name: address
  : http://localhost:8080
** Json
   #+name: json-pretty
   #+begin_src elisp :var data=""
   (with-temp-buffer
     (insert data)
     (json-pretty-print-buffer)
     (buffer-string))
   #+end_src
** Requests
*** Get
    :properties:
    :header-args+: :results code :wrap "src json" :post json-pretty(data = *this*)
    :end:
    #+name: get
    #+begin_src bash :var address=address :var endpoint="" :var params=""
      curl -X GET "$address$endpoint$params"
    #+end_src
*** Post
    #+name: post
    #+begin_src bash :var address=address :var endpoint="" :var payload=""
      curl -H "Content-Type: application/json" \
           -d "$payload" \
           -X POST "$address$endpoint"
    #+end_src
*** Delete
    #+name: delete
    #+begin_src bash :var address=address :var endpoint="" :var params=""
      curl -X DELETE "$address$endpoint$params"
    #+end_src
** Endpoints
*** Questions
    #+name: questions-endpoint
    : /api/questions
**** Get
***** Id
      #+call: get[:var params="?id=5cec6d15fd2b722f3c58d539"](address, questions-endpoint)
      #+results:
      #+BEGIN_src json
      null
      #+END_src
***** All
      #+call: get(address, questions-endpoint, "")
      #+results:
      #+BEGIN_src json
      []
      #+END_src
**** Post
     #+name: question-payload
     #+begin_example json
       {
         "theme": "pruu",
         "description": "hihihi",
         "statement": "hihihi",
         "record": {
           "2020/2": {
             "tz": 4.0,
             "tw": 7.0
           },
           "2020/1": {
             "tz": 5.0,
             "tw": 6.0
           }
         },
         "pvt": false
       }
     #+end_example
     #+call: post(address, questions-endpoint, question-payload)
     #+results:
     : OK
**** Delete
     #+call: delete[:var params="?id=5cedbe30a9faf665092a4410"](address, questions-endpoint)
     #+results:
     : OK
