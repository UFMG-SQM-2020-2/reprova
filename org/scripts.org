# -*- org-confirm-babel-evaluate: nil -*-

* API
  #+name: address
  : http://localhost:8080
** Json
   #+name: json-pretty
   #+begin_src elisp :var data=""
   (with-temp-buffer
     (insert data)
     (json-pretty-print-buffer)
     (buffer-string))
   #+end_src
** Requests
*** Get
    :properties:
    :header-args+: :results code :wrap "src json" :post json-pretty(data = *this*)
    :end:
    #+name: get
    #+begin_src bash :var address=address :var endpoint="" :var token="" :var params=""
      url="$address$endpoint?$params"

      if [ ! -z $token ]; then
        url="$url&token=$token"
      fi

      curl -X GET "$url"
    #+end_src
*** Post
    #+name: post
    #+begin_src bash :var address=address :var endpoint="" :var token="" :var payload=""
      url="$address$endpoint"

      if [ ! -z $token ]; then
        url="$url?token=$token"
      fi


      curl -X POST \
           -H "Content-Type: application/json" \
           -d "$payload" \
           "$url"
    #+end_src
*** Delete
    #+name: delete
    #+begin_src bash :var address=address :var endpoint="" :var token="" :var params=""
      url="$address$endpoint?$params"

      if [ ! -z $token ]; then
        url="$url&token=$token"
      fi

      curl -X DELETE $url
    #+end_src
** Endpoints
*** Questions
    #+name: questions-endpoint
    : /api/questions
    #+name: token
    : d2fad245dd1d8a4f863e3f1c32bdada723361e6f63cfddf56663e516e47347bb
**** Get
***** Id
      #+call: get(address, questions-endpoint, token, params="id=5cef2b28eeddfd4b1fe5ac7e")
      #+results:
      #+BEGIN_src json
      "Invalid request"
      #+END_src
***** All
      #+call: get(address, questions-endpoint, params="token=d2fad245dd1d8a4f863e3f1c32bdada723361e6f63cfddf56663e516e47347bb")
      #+results:
      #+BEGIN_src json
      [
        {
          "id": "5cef2b28eeddfd4b1fe5ac7e",
          "theme": "reuso",
          "description": "qual a melhor técinica de reuso?",
          "record": {
            "2020/1": {
              "tz": 5.0,
              "tw": 6.0
            },
            "2020/2": {
              "tz": 4.0,
              "tw": 7.0
            }
          },
          "pvt": true
        },
        {
          "id": "5cef2b40eeddfd4b1fe5ac7f",
          "theme": "agil",
          "description": "qual o melhor método ágil?",
          "record": {
            "2020/1": {
              "tz": 5.0,
              "tw": 6.0
            },
            "2020/2": {
              "tz": 4.0,
              "tw": 7.0
            }
          },
          "pvt": true
        }
      ]
      #+END_src
**** Post
     #+name: question-payload
     #+begin_example json
       {
         "theme": "quitute",
         "description": "fifififi?",
         "statement": "fafdsfsdf",
         "record": {
           "2019/1": {
             "tz": 4.5,
             "tw": 7.5
           },
           "2019/2": {
             "tz": 5.0,
             "tw": 6.0
           },
           "2020/1": {
             "tz": 5.0,
             "tw": 6.0
           },
           "2020/2": {
             "tz": 5.9,
             "tw": 6.9,
             "tx": 7.9,
             "ta": 8.9
           }
         },
         "pvt": true
       }
     #+end_example
     #+call: post(address, questions-endpoint, token, question-payload)
     #+results:
     : Ok
**** Delete
     #+call: delete(address, questions-endpoint, token, params="id=5cef2b28eeddfd4b1fe5ac7e")
     #+results:
     : Ok
